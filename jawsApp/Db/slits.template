# S1 is North, or East Jaw/slit
# S2 is South or West Jaw/slit

# coordinate system is cartesian for jaws, but motors may be defined
# such that motion away from centre is always positive. This is controlled
# by the SWMULT variable
record (ao, "$(P)$(SLIT)$(S1):SP")
{
    field(ASG, "$(ASG)")
	field(DESC, "$(D1) Setpoint")
	field(OUT, "$(P)$(SLIT)$(S1)_SPALT.A PP MS")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}
alias("$(P)$(SLIT)$(S1):SP", "$(P)$(SLIT)$(S1):SP:RBV")

record (ao, "$(P)$(SLIT)$(S2):SP")
{
    field(ASG, "$(ASG)")
	field(DESC, "$(D2) Setpoint")
	field(OUT, "$(P)$(SLIT)$(S1)_SPALT.B PP MS")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}
alias("$(P)$(SLIT)$(S2):SP", "$(P)$(SLIT)$(S2):SP:RBV")

record (ao, "$(P)$(SLIT)$(GAP):SP")
{
    field(ASG, "$(ASG)")
	field(DESC, "$(DGAP) Setpoint")
	field(OUT, "$(P)$(SLIT)$(S1)_SPALT.C PP MS")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}
alias("$(P)$(SLIT)$(GAP):SP", "$(P)$(SLIT)$(GAP):SP:RBV")

record (ao, "$(P)$(SLIT)$(CENTRE):SP")
{
    field(ASG, "$(ASG)")
	field(DESC, "$(DCENTRE) Setpoint")
	field(OUT, "$(P)$(SLIT)$(S1)_SPALT.D PP MS")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}
alias("$(P)$(SLIT)$(CENTRE):SP", "$(P)$(SLIT)$(CENTRE):SP:RBV")

# set correct SPALT values on init
record (transform, "$(P)$(SLIT)$(S1)$(S2)INIT")
{
    field(ASG, "$(ASG)")
	field(DESC, "Motor Value Init")
    field(COPT, "Always")
    field(PINI, "YES")
	field(INPE, "$(P)$(M1).VAL NPP NMS")
	field(INPF, "$(P)$(M2).VAL NPP NMS")
	field(INPI, "$(P)$(SLIT)$(S1)_SWMULT.VAL")
	field(CLCA, "E")
	field(CLCB, "F*I")
	field(OUTA, "$(P)$(SLIT)$(S1)_SPALT.A NPP NMS")
	field(OUTB, "$(P)$(SLIT)$(S1)_SPALT.B PP NMS")
	field(PREC, "3")
	field(CMTA, "$(D1) Value")
	field(CMTB, "$(D2) Value")
	field(CMTE, "Current $(M1) Value")
	field(CMTF, "Current $(M2) Value")
}

record(ao, "$(P)$(SLIT)$(S1):BPUT") 
{
  field(ASG, "$(ASG)")
  field(SDIS, "$(P)$(SLIT)$(S1):SP.PACT  NPP NMS")
  field(OUT, "$(P)$(SLIT)$(S1):SP.VAL  PP MS")
}

record(ao, "$(P)$(SLIT)$(S2):BPUT") 
{
  field(ASG, "$(ASG)")
  field(SDIS, "$(P)$(SLIT)$(S2):SP.PACT  NPP NMS")
  field(OUT, "$(P)$(SLIT)$(S2):SP.VAL  PP MS")
}

record(ao, "$(P)$(SLIT)$(GAP):BPUT") 
{
  field(ASG, "$(ASG)")
  field(SDIS, "$(P)$(SLIT)$(GAP):SP.PACT  NPP NMS")
  field(OUT, "$(P)$(SLIT)$(GAP):SP.VAL  PP MS")
}

record(ao, "$(P)$(SLIT)$(CENTRE):BPUT") {
  field(ASG, "$(ASG)")
  field(SDIS, "$(P)$(SLIT)$(CENTRE):SP.PACT  NPP NMS")
  field(OUT, "$(P)$(SLIT)$(CENTRE):SP.VAL  PP MS")
}

record (ai, "$(P)$(SLIT)$(S1)") 
{
    field(ASG, "$(ASG)")
	field(DESC, "Current $(D1) position")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "0.1 VAL")
    info(INTEREST, "HIGH")
}
# Add alias to expose the underlying DMOV
alias("$(P)$(M1):DMOV", "$(P)$(SLIT)$(S1):DMOV")

record (ai, "$(P)$(SLIT)$(S2)") 
{
    field(ASG, "$(ASG)")
	field(DESC, "Current $(D2) position")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "0.1 VAL")
    info(INTEREST, "HIGH")
}
# Add alias to expose the underlying DMOV
alias("$(P)$(M2):DMOV", "$(P)$(SLIT)$(S2):DMOV")

record (ai, "$(P)$(SLIT)$(GAP)") 
{
    field(ASG, "$(ASG)")
	field(DESC, "Current $(DGAP) position")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "0.1 VAL")
    info(INTEREST, "HIGH")
}

# Calc record to create a DMOV for the GAP
# DMOV = 1 when not moving and = 0 when moving, 
# so if one or more of the slits are moving then the sum is less than 2
record(calc, "$(P)$(SLIT)$(GAP):DMOV"){
    field(ASG, "$(ASG)")
    field(SCAN,".1 second")
    field(INPA, "$(P)$(M1):DMOV")
    field(INPB, "$(P)$(M2):DMOV")
    field("CALC", "A + B >= 2")
}

record (ai, "$(P)$(SLIT)$(CENTRE)") 
{
    field(ASG, "$(ASG)")
	field(DESC, "Current $(DCENTRE) position")
	field(PREC, "3")
	field(EGU, "")
    info(archive, "0.1 VAL")
    info(INTEREST, "HIGH")
}

# Use an alias to define the DMOV for the centre as being the same as the GAP
# because they use the same motors.
# This does mean the centre appears to be moving when the gap is changing but it
# is an acceptable compromise
alias("$(P)$(SLIT)$(GAP):DMOV", "$(P)$(SLIT)$(CENTRE):DMOV")

# slip setpoint -> motor setpoint -> jaws setpoint readback
record (transform, "$(P)$(SLIT)$(S1)_SPALT") 
{
    field(ASG, "$(ASG)")
	field(DESC, "Slit SP to motor SP")
    field(COPT, "Conditional")
	field(INPI, "$(P)$(SLIT)$(S1)_SWMULT.VAL")
	field(CLCA, "(D+C/2)")
	field(CLCB, "(D-C/2)")
	field(CLCC, "(A-B)")
	field(CLCD, "(A+B)/2")
	field(CLCE, "A")
	field(CLCF, "B*I")
	field(OUTA, "$(P)$(SLIT)$(S1):BPUT.VAL PP MS")
	field(OUTB, "$(P)$(SLIT)$(S2):BPUT.VAL PP MS")
	field(OUTC, "$(P)$(SLIT)$(GAP):BPUT.VAL PP MS")
	field(OUTD, "$(P)$(SLIT)$(CENTRE):BPUT.VAL PP MS")
	field(OUTE, "$(P)$(M1).VAL PP MS")
	field(OUTF, "$(P)$(M2).VAL PP MS")
	field(PREC, "3")
	field(CMTA, "Calculated $(D1) Value")
	field(CMTB, "Calculated $(D2) Value")
	field(CMTC, "Calculated $(DGAP) Value")
	field(CMTD, "Calculated $(DCENTRE) Value")
	field(CMTE, "Calculated $(M1) Value")
	field(CMTF, "Calculated $(M2) Value")
}

# This record also puts the GAP and CENTRE into alarm, but not the axes themselves
record (transform, "$(P)$(SLIT)$(S1)$(S2)_RBALT"){
    field(ASG, "$(ASG)")
	field(DESC, "Motor Value to Jaws Value")
    field(COPT, "Always")
	field(SCAN, ".1 second")
	field(INPE, "$(P)$(M1).RBV NPP MS")
	field(INPF, "$(P)$(M2).RBV NPP MS")
	field(INPI, "$(P)$(SLIT)$(S1)_SWMULT.VAL")
	field(CLCA, "E")
	field(CLCB, "F*I")
	field(CLCC, "(A-B)")
	field(CLCD, "(A+B)/2")
	field(OUTA, "$(P)$(SLIT)$(S1)_INTMED.VAL PP NMS")
	field(OUTB, "$(P)$(SLIT)$(S2)_INTMED.VAL PP NMS")
	field(OUTC, "$(P)$(SLIT)$(GAP).VAL PP MS")
	field(OUTD, "$(P)$(SLIT)$(CENTRE).VAL PP MS")
	field(PREC, "3")
	field(CMTA, "$(D1) Value")
	field(CMTB, "$(D2) Value")
	field(CMTC, "$(DGAP) Value")
	field(CMTD, "$(DCENTRE) Value")
	field(CMTE, "Current $(M1) Value")
	field(CMTF, "Current $(M2) Value")
	field(SDIS, "$(P)$(SLIT)$(S1)_SPALT.PACT")
    field(FLNK, "$(P)$(SLIT)$(S1)_ALARM")
}

# A intermediate value used to hold the jaws value before applying
# the alarm 
record(ai, "$(P)$(SLIT)$(S1)_INTMED"){
  field(ASG, "$(ASG)")
}

# A intermediate value used to hold the jaws value before applying
# the alarm 
record(ai, "$(P)$(SLIT)$(S2)_INTMED"){
  field(ASG, "$(ASG)")
}

# This puts the jaw into alarm by taking the alarm value from the underlying motor
# and putting the value of the intermediate record.
record (transform, "$(P)$(SLIT)$(S1)_ALARM"){
    field(ASG, "$(ASG)")
	field(DESC, "Propagates the alarm from the motor")
    field(COPT, "Always")
	field(INPE, "$(P)$(SLIT)$(S1)_INTMED.VAL NPP NMS")
	field(INPF, "$(P)$(M1).RBV NPP MS")
	field(CLCB, "E")
	field(OUTB, "$(P)$(SLIT)$(S1).VAL PP MS")
	field(PREC, "3")
	field(SDIS, "$(P)$(SLIT)$(S1)_SPALT.PACT")
    field(FLNK, "$(P)$(SLIT)$(S2)_ALARM")
}

# This puts the jaw into alarm by taking the alarm value from the underlying motor
# and putting the value of the intermediate record.
record (transform, "$(P)$(SLIT)$(S2)_ALARM"){
    field(ASG, "$(ASG)")
	field(DESC, "Propagates the alarm from the motor")
    field(COPT, "Always")
	field(INPE, "$(P)$(SLIT)$(S2)_INTMED.VAL NPP NMS")
	field(INPF, "$(P)$(M2).RBV NPP MS")
	field(CLCB, "E")
	field(OUTB, "$(P)$(SLIT)$(S2).VAL PP MS")
	field(PREC, "3")
	field(SDIS, "$(P)$(SLIT)$(S1)_SPALT.PACT")
}

# this is how motor positions are done - jaws are in a cartesian system where
# North and east are positive, south and west are negative wheeras motors may
# be defined so that motion away from centre is always positive
record (ai, "$(P)$(SLIT)$(S1)_SWMULT") {
    field(ASG, "$(ASG)")
	field(DESC, "From center(-1) or same plane(1)")
	field(VAL, "-1")
}

## update slit archive and monitor deadbands from motor deadbands
record (seq, "$(P)$(SLIT)$(S1)AMDEL") {
    field(ASG, "$(ASG)")
	field(PINI, "1")
	field(DOL1, "$(P)$(M1).ADEL NPP NMS")
	field(LNK1, "$(P)$(SLIT)$(S1).ADEL NPP NMS")
	field(DOL2, "$(P)$(M2).ADEL NPP NMS")
	field(LNK2, "$(P)$(SLIT)$(S2).ADEL NPP NMS")
	field(DOL3, "$(P)$(M1).ADEL NPP NMS")
	field(LNK3, "$(P)$(SLIT)$(CENTRE).ADEL NPP NMS")
	field(DOL4, "$(P)$(M1).ADEL NPP NMS")
	field(LNK4, "$(P)$(SLIT)$(GAP).ADEL NPP NMS")
	field(DOL5, "$(P)$(M1).MDEL NPP NMS")
	field(LNK5, "$(P)$(SLIT)$(S1).MDEL NPP NMS")
	field(DOL6, "$(P)$(M2).MDEL NPP NMS")
	field(LNK6, "$(P)$(SLIT)$(S2).MDEL NPP NMS")
	field(DOL7, "$(P)$(M1).MDEL NPP NMS")
	field(LNK7, "$(P)$(SLIT)$(CENTRE).MDEL NPP NMS")
	field(DOL8, "$(P)$(M1).MDEL NPP NMS")
	field(LNK8, "$(P)$(SLIT)$(GAP).MDEL NPP NMS")
}


record(stringin, "$(P)$(SLIT)$(S1):MOTOR") {
    field(ASG, "$(ASG)")
    field(DESC, "$(D1) Motor name")
    field(VAL, "$(M1)")
}	


record(stringin, "$(P)$(SLIT)$(S2):MOTOR") {
    field(ASG, "$(ASG)")
    field(DESC, "$(D2) Motor name")
    field(VAL, "$(M2)")
}	

# Create some aliases for the motors for use by the GUI etc
alias("$(P)$(M1)", "$(P)$(SLIT)$(S1):MTR")
alias("$(P)$(M2)", "$(P)$(SLIT)$(S2):MTR")

